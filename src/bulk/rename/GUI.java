/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package bulk.rename;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Admin
 */
public class GUI extends javax.swing.JFrame {

    private File[] files;
    
    /** Creates new form GUI */
    public GUI() {
        super("Bulk Rename");
        
        try{
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(Exception e){
            ;
        }
        
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfPrefix = new javax.swing.JTextField();
        tfSuffix = new javax.swing.JTextField();
        lbPrefix = new javax.swing.JLabel();
        lbSuffix = new javax.swing.JLabel();
        lbCounterStartNumberPrefix = new javax.swing.JLabel();
        tfCounterPrefix = new javax.swing.JTextField();
        cbEnableCounter = new javax.swing.JCheckBox();
        btRename = new javax.swing.JButton();
        btPreview = new javax.swing.JButton();
        btSelectFiles = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFiles = new javax.swing.JList<>();
        lbTotal = new javax.swing.JLabel();
        tfCounterSuffix = new javax.swing.JTextField();
        lbCounterStartNumberSuffix = new javax.swing.JLabel();
        lbCounterPrefix = new javax.swing.JLabel();
        lbCounterSuffix = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        lbVersion = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        cbMaintainName = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        tfPrefix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tfPrefix.setEnabled(false);
        getContentPane().add(tfPrefix);
        tfPrefix.setBounds(80, 460, 150, 30);

        tfSuffix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tfSuffix.setEnabled(false);
        getContentPane().add(tfSuffix);
        tfSuffix.setBounds(80, 500, 150, 30);

        lbPrefix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbPrefix.setText("Prefix:");
        lbPrefix.setEnabled(false);
        getContentPane().add(lbPrefix);
        lbPrefix.setBounds(20, 460, 60, 30);

        lbSuffix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbSuffix.setText("Suffix:");
        lbSuffix.setEnabled(false);
        getContentPane().add(lbSuffix);
        lbSuffix.setBounds(20, 500, 50, 30);

        lbCounterStartNumberPrefix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbCounterStartNumberPrefix.setText("Start number:");
        lbCounterStartNumberPrefix.setEnabled(false);
        getContentPane().add(lbCounterStartNumberPrefix);
        lbCounterStartNumberPrefix.setBounds(270, 410, 100, 30);

        tfCounterPrefix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tfCounterPrefix.setEnabled(false);
        tfCounterPrefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCounterPrefixActionPerformed(evt);
            }
        });
        getContentPane().add(tfCounterPrefix);
        tfCounterPrefix.setBounds(380, 410, 100, 28);

        cbEnableCounter.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cbEnableCounter.setText("Enable Counter");
        cbEnableCounter.setEnabled(false);
        cbEnableCounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEnableCounterActionPerformed(evt);
            }
        });
        getContentPane().add(cbEnableCounter);
        cbEnableCounter.setBounds(270, 350, 140, 20);

        btRename.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btRename.setText("Rename All");
        btRename.setEnabled(false);
        btRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRenameActionPerformed(evt);
            }
        });
        getContentPane().add(btRename);
        btRename.setBounds(610, 500, 150, 30);

        btPreview.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btPreview.setText("Preview");
        btPreview.setEnabled(false);
        btPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPreviewActionPerformed(evt);
            }
        });
        getContentPane().add(btPreview);
        btPreview.setBounds(610, 460, 150, 30);

        btSelectFiles.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btSelectFiles.setText("Select Files");
        btSelectFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelectFilesActionPerformed(evt);
            }
        });
        getContentPane().add(btSelectFiles);
        btSelectFiles.setBounds(610, 420, 150, 30);

        listFiles.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        listFiles.setEnabled(false);
        jScrollPane1.setViewportView(listFiles);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 750, 290);

        lbTotal.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        getContentPane().add(lbTotal);
        lbTotal.setBounds(20, 10, 160, 30);

        tfCounterSuffix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tfCounterSuffix.setEnabled(false);
        tfCounterSuffix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCounterSuffixActionPerformed(evt);
            }
        });
        getContentPane().add(tfCounterSuffix);
        tfCounterSuffix.setBounds(380, 510, 100, 28);

        lbCounterStartNumberSuffix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbCounterStartNumberSuffix.setText("Start number:");
        lbCounterStartNumberSuffix.setEnabled(false);
        getContentPane().add(lbCounterStartNumberSuffix);
        lbCounterStartNumberSuffix.setBounds(270, 510, 100, 30);

        lbCounterPrefix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbCounterPrefix.setText("Prefix");
        lbCounterPrefix.setEnabled(false);
        getContentPane().add(lbCounterPrefix);
        lbCounterPrefix.setBounds(270, 370, 50, 40);

        lbCounterSuffix.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbCounterSuffix.setText("Suffix");
        lbCounterSuffix.setEnabled(false);
        getContentPane().add(lbCounterSuffix);
        lbCounterSuffix.setBounds(270, 470, 60, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(270, 460, 230, 10);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(260, 350, 10, 200);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(590, 350, 10, 200);

        lbVersion.setText("V 1.0");
        getContentPane().add(lbVersion);
        lbVersion.setBounds(730, 540, 37, 20);

        lbName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lbName.setText("Name: ");
        lbName.setEnabled(false);
        getContentPane().add(lbName);
        lbName.setBounds(20, 390, 50, 22);

        tfName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tfName.setEnabled(false);
        getContentPane().add(tfName);
        tfName.setBounds(80, 390, 150, 28);

        cbMaintainName.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cbMaintainName.setText("Maintain name");
        cbMaintainName.setEnabled(false);
        cbMaintainName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaintainNameActionPerformed(evt);
            }
        });
        getContentPane().add(cbMaintainName);
        cbMaintainName.setBounds(20, 350, 150, 26);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfCounterPrefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCounterPrefixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCounterPrefixActionPerformed

    private void btSelectFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelectFilesActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setDialogTitle("Select Files");
        
        int returnVal = fileChooser.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION){
            enableGUI();
            
            this.files = fileChooser.getSelectedFiles();
            
            DefaultListModel listModel = new DefaultListModel();
            
            for (int i = 0; i < this.files.length; i++){    
                listModel.addElement(this.files[i].getName());
            }
            listFiles.setModel(listModel);
            lbTotal.setText("Number of files: " + this.files.length);
        }
        
    }//GEN-LAST:event_btSelectFilesActionPerformed

    private void btPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPreviewActionPerformed
        renameFiles(true);
    }//GEN-LAST:event_btPreviewActionPerformed

    private void cbEnableCounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEnableCounterActionPerformed
        if (cbEnableCounter.isSelected()){
            lbCounterStartNumberPrefix.setEnabled(true);
            lbCounterStartNumberSuffix.setEnabled(true);
            tfCounterPrefix.setEnabled(true);
            tfCounterSuffix.setEnabled(true);
            lbCounterPrefix.setEnabled(true);
            lbCounterSuffix.setEnabled(true);
        }
        else{
            lbCounterStartNumberSuffix.setEnabled(false);
            lbCounterStartNumberPrefix.setEnabled(false);
            tfCounterPrefix.setEnabled(false);
            tfCounterPrefix.setEnabled(false);
            tfCounterSuffix.setEnabled(false);
            lbCounterPrefix.setEnabled(false);
            lbCounterSuffix.setEnabled(false);
        }
    }//GEN-LAST:event_cbEnableCounterActionPerformed

    private void tfCounterSuffixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCounterSuffixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCounterSuffixActionPerformed

    private void cbMaintainNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaintainNameActionPerformed
        if (cbMaintainName.isSelected()){
            tfName.setEnabled(false);
            lbName.setEnabled(false);
        }
        else{
            tfName.setEnabled(true);
            lbName.setEnabled(true);
        }
    }//GEN-LAST:event_cbMaintainNameActionPerformed

    private void btRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRenameActionPerformed
        renameFiles();
    }//GEN-LAST:event_btRenameActionPerformed

    // Verify textfields for error values and alert the user 
    private boolean verifyStringArgs(){
        if (cbMaintainName.isSelected() == false){
            if (tfName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Error. Name can't be empty."
                    , "Error", JOptionPane.ERROR_MESSAGE);
            return false;
            }
        }
        String invalidChar = "<>:\"/\\|?*";
        String preSuf = tfPrefix.getText() + tfSuffix.getText() + tfName.getText();
        String errorChar = "";
        int error = 0;
        for (char c : invalidChar.toCharArray()){
            if (preSuf.indexOf(c) != -1){
                errorChar += c + " ";
                error = 1;
            }
        }
        if (error == 0){
            return true;
        }
        else{
            JOptionPane.showMessageDialog(this, "Error. These characters are invalid:\n"
                    + errorChar, "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean verifyNumberArgs(){
        try{
            if (tfCounterPrefix.getText().equals("") == false){
                Integer.parseInt(tfCounterPrefix.getText());
            }
            if (tfCounterSuffix.getText().equals("") == false){
                Integer.parseInt(tfCounterSuffix.getText());
            }
            return true;
        }
        catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Error. Prefix and Suffix Counter "
                    + "should have integer numbers only.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private void renameFiles(){
        renameFiles(false);
    }
    
    private void renameFiles(boolean preview){
        if (verifyStringArgs() == false){
            return;
        }
        if (verifyNumberArgs() == false){
            return;
        }
        String names[] = new String[files.length];
        int counterPrefix = 1;
        int counterSuffix = 1;
        
        if (cbEnableCounter.isSelected()){
            if (tfCounterPrefix.getText().equals("") == false){
                counterPrefix = Integer.parseInt(tfCounterPrefix.getText());
            }
            if (tfCounterSuffix.getText().equals("") == false){
                counterSuffix = Integer.parseInt(tfCounterSuffix.getText());
            }
        }
        
        
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < this.files.length; i++){
            if (cbMaintainName.isSelected()){
                names[i] = files[i].getName();
            }
            else{
                names[i] = tfName.getText() + getExtension(files[i].getName());
            }
            
            names[i] = addPrefixSuffix(names[i], counterPrefix, counterSuffix);
            counterPrefix++;
            counterSuffix++;
            
            names[i] = nonConflictingNames(files[i].getParent() + "\\" + names[i]);
            
            listModel.addElement(names[i]);
        }
        if (preview){
            PreviewWindow previewWindow = new PreviewWindow(this.getLocation());
            previewWindow.addModels(listModel);
            return;
        }
        for (int i = 0; i < names.length; i++){
            files[i].renameTo(new File(names[i]));
        }
        JOptionPane.showMessageDialog(this, "All files renamed.");
        restartGUI();
    }
    
    private void restartGUI(){
        listFiles.setModel(new DefaultListModel());
        btPreview.setEnabled(false);
        btRename.setEnabled(false);
        lbPrefix.setEnabled(false);
        lbSuffix.setEnabled(false);
        tfPrefix.setEnabled(false);
        tfSuffix.setEnabled(false);
        cbEnableCounter.setEnabled(false);
        listFiles.setEnabled(false);
        lbName.setEnabled(false);
        tfName.setEnabled(false);
        cbMaintainName.setEnabled(false);
        lbTotal.setText("");
        cbMaintainName.setSelected(false);
        cbEnableCounter.setSelected(false);
        tfCounterPrefix.setText("");
        tfCounterSuffix.setText("");
        tfName.setText("");
        tfPrefix.setText("");
        tfSuffix.setText("");
        lbCounterStartNumberSuffix.setEnabled(false);
        lbCounterStartNumberPrefix.setEnabled(false);
        tfCounterPrefix.setEnabled(false);
        tfCounterPrefix.setEnabled(false);
        tfCounterSuffix.setEnabled(false);
        lbCounterPrefix.setEnabled(false);
        lbCounterSuffix.setEnabled(false);
    }
    
    private String nonConflictingNames(String path){
        File file = new File(path);
        String extension = getExtension(path);
        String baseName = removeExtension(path);
        int counter = 1;
        if (file.isFile()){
            file = new File(baseName + "(" + counter + ")" + extension);
            counter++;
        }
        return file.getAbsolutePath();
    }
    
    private String removeExtension(String fileName){
        if (fileName.indexOf(".") > 0){
            return fileName.substring(0, fileName.lastIndexOf("."));
        }
        else{
            return fileName;
        }
    }
    
    private String getExtension(String fileName){
        if (fileName.indexOf(".") > 0){
            return fileName.substring(fileName.lastIndexOf("."));
        }
        else{
            return "";
        }
    }
    
    private String addPrefixSuffix(String fileName, int prefix, int suffix){
        fileName = addPrefix(fileName, prefix);
        fileName = addSuffix(fileName, suffix);
        return fileName;
    }
    
    private String addSuffix(String fileName, int counterSuffix){
        String extension = getExtension(fileName);
        fileName = removeExtension(fileName);
        
        fileName = fileName + tfSuffix.getText();
        
        if (cbEnableCounter.isSelected()){
                if (tfCounterSuffix.getText().equals("") == false){
                    fileName = fileName + counterSuffix;
                }
        }
        fileName = fileName + extension;
        return fileName;
    }
    
    private String addPrefix(String fileName, int prefix){
        String extension = getExtension(fileName);
        fileName = removeExtension(fileName);
        
        fileName = tfPrefix.getText() + fileName;
        
        if (cbEnableCounter.isSelected()){
                if (tfCounterPrefix.getText().equals("") == false){
                    fileName = "" + prefix + fileName;
                }
        }
        fileName = fileName + extension;
        return fileName;
    }
    
    // Enable almost everything
    // Used after user choose a file
    private void enableGUI(){
        btPreview.setEnabled(true);
        btRename.setEnabled(true);
        lbPrefix.setEnabled(true);
        lbSuffix.setEnabled(true);
        tfPrefix.setEnabled(true);
        tfSuffix.setEnabled(true);
        cbEnableCounter.setEnabled(true);
        listFiles.setEnabled(true);
        lbName.setEnabled(true);
        tfName.setEnabled(true);
        cbMaintainName.setEnabled(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPreview;
    private javax.swing.JButton btRename;
    private javax.swing.JButton btSelectFiles;
    private javax.swing.JCheckBox cbEnableCounter;
    private javax.swing.JCheckBox cbMaintainName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbCounterPrefix;
    private javax.swing.JLabel lbCounterStartNumberPrefix;
    private javax.swing.JLabel lbCounterStartNumberSuffix;
    private javax.swing.JLabel lbCounterSuffix;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPrefix;
    private javax.swing.JLabel lbSuffix;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lbVersion;
    private javax.swing.JList<String> listFiles;
    private javax.swing.JTextField tfCounterPrefix;
    private javax.swing.JTextField tfCounterSuffix;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPrefix;
    private javax.swing.JTextField tfSuffix;
    // End of variables declaration//GEN-END:variables

}
